{"ast":null,"code":"var _jsxFileName = \"/Users/melwinpsebastian/cmpt353/Cmpt353_finalProject/final-project/Frontend/src/AskPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Header1 from \"./Header1\";\nimport BlueButton from \"./BlueButton\";\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport StyledInput from \"./StyledInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  padding: 30px 20px;\n`;\n_c = Container;\nconst QuestionBodyTextArea = styled.textarea`\n  background: none;\n  border: 1px solid #777;\n  border-radius: 3px;\n  display: block;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 10px;\n  min-height: 200px;\n  margin-bottom: 20px;\n  color: #fff;\n  font-family: inherit;\n`;\n_c2 = QuestionBodyTextArea;\nconst PreviewArea = styled.div`\n  padding: 10px 20px;\n  background-color: #444;\n  border-raidus: 5px;\n  margin-bottom: 20px;\n\n`;\n_c3 = PreviewArea;\nconst FileInput = styled.input`\n  display: none;\n`;\n_c4 = FileInput;\nconst UploadButton = styled.label`\n  display: inline-block;\n  background: #444;\n  color: white;\n  padding: 10px 15px;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-bottom: 20px;\n  text-align: center;\n  &:hover {\n    background: #555;\n  }\n`;\n_c5 = UploadButton;\nconst ScreenshotPreview = styled.img`\n  display: block;\n  max-width: 100%;\n  max-height: 200px;\n  margin-top: 10px;\n  border-radius: 5px;\n`;\n_c6 = ScreenshotPreview;\nexport default function AskPage() {\n  _s();\n  const [questionBody, setQuestionBody] = useState(null);\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        setScreenshot(reader.result); // Convert file to base64 string for preview\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const [screenshot, setScreenshot] = useState(null);\n  const [questionTitle, setQuestionTitle] = useState(null);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header1, {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: \"Ask a Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledInput, {\n      type: \"text\",\n      value: questionTitle,\n      onChange: e => setQuestionTitle(e.target.value),\n      placeholder: \"Title of your question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuestionBodyTextArea, {\n      onChange: e => setQuestionBody(e.target.value),\n      placeholder: \"Type your description of your question here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UploadButton, {\n      htmlFor: \"screenshotUpload\",\n      children: \"Upload Screenshot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileInput, {\n      type: \"file\",\n      id: \"screenshotUpload\",\n      accept: \"image/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), screenshot && /*#__PURE__*/_jsxDEV(ScreenshotPreview, {\n      src: screenshot,\n      alt: \"Screenshot Preview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(BlueButton, {\n      children: \"Post your Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PreviewArea, {\n      children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        remarkPlugins: [gfm],\n        children: questionBody\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(AskPage, \"dAS65lmkDZZ4gq0otcz1SDVLJ8o=\");\n_c7 = AskPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"QuestionBodyTextArea\");\n$RefreshReg$(_c3, \"PreviewArea\");\n$RefreshReg$(_c4, \"FileInput\");\n$RefreshReg$(_c5, \"UploadButton\");\n$RefreshReg$(_c6, \"ScreenshotPreview\");\n$RefreshReg$(_c7, \"AskPage\");","map":{"version":3,"names":["useState","styled","Header1","BlueButton","ReactMarkdown","gfm","StyledInput","jsxDEV","_jsxDEV","Container","div","_c","QuestionBodyTextArea","textarea","_c2","PreviewArea","_c3","FileInput","input","_c4","UploadButton","label","_c5","ScreenshotPreview","img","_c6","AskPage","_s","questionBody","setQuestionBody","handleFileChange","event","file","target","files","reader","FileReader","onload","setScreenshot","result","readAsDataURL","screenshot","questionTitle","setQuestionTitle","children","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","placeholder","htmlFor","id","accept","src","alt","remarkPlugins","_c7","$RefreshReg$"],"sources":["/Users/melwinpsebastian/cmpt353/Cmpt353_finalProject/final-project/Frontend/src/AskPage.js"],"sourcesContent":["import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Header1 from \"./Header1\";\nimport BlueButton from \"./BlueButton\";\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport StyledInput from \"./StyledInput\";\nconst Container = styled.div`\n  padding: 30px 20px;\n`;\n\n\n\nconst QuestionBodyTextArea = styled.textarea`\n  background: none;\n  border: 1px solid #777;\n  border-radius: 3px;\n  display: block;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 10px;\n  min-height: 200px;\n  margin-bottom: 20px;\n  color: #fff;\n  font-family: inherit;\n`;\n\nconst PreviewArea = styled.div`\n  padding: 10px 20px;\n  background-color: #444;\n  border-raidus: 5px;\n  margin-bottom: 20px;\n\n`;\n\nconst FileInput = styled.input`\n  display: none;\n`;\n\nconst UploadButton = styled.label`\n  display: inline-block;\n  background: #444;\n  color: white;\n  padding: 10px 15px;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-bottom: 20px;\n  text-align: center;\n  &:hover {\n    background: #555;\n  }\n`;\n\nconst ScreenshotPreview = styled.img`\n  display: block;\n  max-width: 100%;\n  max-height: 200px;\n  margin-top: 10px;\n  border-radius: 5px;\n`;\n\nexport default function AskPage() {\n  const [questionBody, setQuestionBody] = useState(null)\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        setScreenshot(reader.result); // Convert file to base64 string for preview\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n\n\nconst [screenshot, setScreenshot] = useState(null)  \nconst [questionTitle, setQuestionTitle] = useState(null)\n\n  return (\n    <Container>\n      <Header1 style={{ marginBottom: \"20px\" }}>Ask a Question</Header1>\n      <StyledInput type=\"text\"\n                        value={questionTitle}\n                        onChange={e => setQuestionTitle(e.target.value)}\n                        placeholder=\"Title of your question\" />\n      <QuestionBodyTextArea \n                        onChange={ e=> setQuestionBody(e.target.value)}\n                        placeholder=\"Type your description of your question here\" />\n\n      \n      <UploadButton htmlFor=\"screenshotUpload\">Upload Screenshot</UploadButton>\n      <FileInput type=\"file\" id=\"screenshotUpload\" accept=\"image/*\" onChange={handleFileChange} />\n\n      \n      {screenshot && <ScreenshotPreview src={screenshot} alt=\"Screenshot Preview\" />}\n      <BlueButton>Post your Question</BlueButton>\n      <PreviewArea>\n        <ReactMarkdown remarkPlugins={[gfm]} children={questionBody}/>\n      </PreviewArea>\n    </Container>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}